* {
    box-sizing: border-box;
}

h2 {
    margin: 0;
    padding: 0;
}

h1 {
    text-align: center;
    background-color: green;
    border-top: 3px solid gray;
    border-bottom: 3px solid gray;
}

h2, h3 {
    display: inline-block;
}

h2 {
    border-bottom: 2px groove gray;
    width: 100%;
}

h3 {
    border-bottom: 2px groove gray;
}

.subtopic {
    background-color: rgb(230, 222, 116);
    width: 100%;
    padding: 1.5%;
    margin-bottom: 1%;

}

.content {
    padding: 2%;
    background-color: rgb(233, 228, 164);
}

/*------------- SELECTING WHICH LINKS TO STYLE -------------*/

a {
    color: green; /*A generi style, this style has effect over all types of pseudo-class (:active, :link, etc.)*/
}

.beveled__button {
    display: inline-block;
    background-color: #b1b1b1;
    color: #fff;
    font-weight: bold;
    border-width: 4px;
    border-style: solid;
    border-top-color: #dfdfdf;
    border-right-color: #666;
    border-bottom-color: #333;
    border-left-color: #858585;
    padding: 15px 2%;
} 

/*A beveled style button needs to have four defferent colors in every border, but with the following rules:
 one border should be the lightest while the opposite border is the darkest and the other two side should have shades in between lit and shadow borders*/

.beveled__button:hover {
    background-color: #949090;
    border-top-color: #333;
    border-right-color: #858585;
    border-bottom-color: #dfdfdf;
    border-left-color: #666;
}

.linear__button {
    background-color: #ee432e;
    background-image: -webkit-linear-gradient(top, #ee432e 0%, #c63929 50%, #b51700 50%, #891100 100%);
    border: 1px solid #951100;
    border-radius: 5px;
    box-shadow: inset 0px 0px 0px 1px rgba(255, 115, 100, 0.4), 0 1px 3px #333;
    padding: 12px 20px 14px 20px;
    text-decoration: none;
    color: #fff;
    font: bold 20px/1 "helvetica neue", helvetica, arial, sans-serif;
    text-align: center;
    text-shadow: 0px -1px 1px rgba(0, 0, 0, 0.8);
}

/*--------------- NAVIGATION BARS -------------*/
/*General styles in a navigation bar*/
.navbar {
    list-style-type: none;
    padding: 0;
    margin: 0;
}
/*These three properties always will be necccessary when we work we nav bars just to eliminate the bullets beside them and erase the space indented*/

/* Vertical Nav Bar */
.vertical__link {
    display: block; /* To display the width of the element at the vertical edges of its parent*/
    height: 2em;
    line-height: 2em;
    text-align: center;
    border-top: 1px solid rgb(240, 184, 31);
}
/*Every link has a height of 2em and a line-height of 2em, this two properties need to be equal in order to center the links in vertical direction*/

.vertical__nav {
    width: 18%; /*This is the size that every link will take*/
    border: 1px solid rgb(240, 184, 31);
}

/* Horizontal Nav Bar */
.horizontal__nav-inline {
    margin: 0;
    padding: 0;
    list-style: none;
    border-bottom: 1px dashed #000;
    text-align: center; /*To center all the navbar*/
}
/*This are the general styles to eliminate the default values from unordered list*/

.horizontal__nav-inline li {
    display: inline;
}
/*Now it is neccessary to display the list elements in inline to put it in horizontal direction*/

.inline__links {
    display: inline-block;
    border: 1px dashed #000;
    border-bottom: none;
    padding: 5px 15px 5px 15px;
    background-color: #eaeaea;
    text-decoration: none;
    color: #333;
}
/*In this example every link is not touching each other, it means, there is a space between each other, this due to the way web browsers treat the space between </li> and <li> inside the HTML, so one way to get around this is to put </li> and <li> together in one line, like this
<ul>
    <li><a></a></li><li><a></a></li>
</ul>
*/
/*Another way to get around this is to add a negative margin to the list elements like this:*/
.horizontal__nav-inline li {
    margin-right: -5px;
}
/*This tecnique is not recommended either, since the exact value to get together every link could variant*/

/* Horizontal float nav bar */
.horizontal__nav-float {
    margin: 0;
    padding: 0;
    list-style-type: none;
    border-bottom: 3px solid rgb(204, 204, 204);
    overflow: hidden; /*This property detects the float elements to adjust the parent element size according to these kind of links.*/
}

.horizontal__nav-float li {
    float: left;
}

.float__links {
    width: 12em;
    display: block;
    text-align: center;
    border: 3px solid rgb(204, 204, 204);
    border-bottom: none;
    border-radius: 5px 5px 0 0;
    padding: 10px;
    margin-right: 5px;
    background-color: rgb(95, 95, 95);
    background-image: -webkit-linear-gradient(rgb(175,175,175), rgb(95,95,95));
    background-image: -moz-linear-gradient(rgb(175,175,175), rgb(95,95,95));
    background-image: -o-linear-gradient(rgb(175,175,175), rgb(95,95,95));
    background-image: linear-gradient(rgb(175,175,175), rgb(95,95,95));
    text-decoration: none;
    color: white;
    font-family: Arial, Helvetica, sans-serif;
    font-weight: bold;
}

/* Styling particular types of links */
a[href^='http'] {
    color: rgb(25, 90, 170);
}
/* This kind of selector are called attribute selectors and with them it is possible to look for an HTML element with an specific attribute and with a detemined value. This example looks for the <a> elements that has the href attirbute with an initial value of 'http' */

a[href*='://'] {
    border: 1px solid rgb(25, 90, 170);
    text-decoration: none;
}
/* Here we look for the href attribute that has in its string value the '://' characters, it doesn't matter where the characters where in */

a[href^='mailto:'] {
    background-color: rgb(25, 90, 170);
    color: #fff;
}
/*This example is similar to the first one, here we look for the links that has a mailto in the begining of their href value */

a[href$='.pdf'] {
    font-style: italic;
}

/* Here we just apply an italic text format to the links that end in .pdf in their href value */